
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { Label } from '@/components/ui/label';
import { PlayerClass } from '@/types/game';

interface AuthFormsProps {
  onLogin: (name: string, playerClass: PlayerClass) => void;
}

const AuthForms = ({ onLogin }: AuthFormsProps) => {
  const [isLogin, setIsLogin] = useState(true);
  const [name, setName] = useState('');
  const [selectedClass, setSelectedClass] = useState<PlayerClass>('warrior');

  const classes = [
    {
      id: 'warrior' as PlayerClass,
      name: '–í–æ–∏–Ω',
      emoji: '‚öîÔ∏è',
      description: '–°–∏–ª—å–Ω—ã–π –∏ –≤—ã–Ω–æ—Å–ª–∏–≤—ã–π –±–æ–µ—Ü –±–ª–∏–∂–Ω–µ–≥–æ –±–æ—è',
      stats: '–í—ã—Å–æ–∫–∏–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏ –∑–∞—â–∏—Ç–∞',
    },
    {
      id: 'mage' as PlayerClass,
      name: '–ú–∞–≥',
      emoji: 'üîÆ',
      description: '–ú–∞—Å—Ç–µ—Ä –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –∏—Å–∫—É—Å—Å—Ç–≤',
      stats: '–í—ã—Å–æ–∫–∏–µ –º–∞–Ω–∞ –∏ –∞—Ç–∞–∫–∞',
    },
    {
      id: 'archer' as PlayerClass,
      name: '–õ—É—á–Ω–∏–∫',
      emoji: 'üèπ',
      description: '–ú–µ—Ç–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫ –¥–∞–ª—å–Ω–µ–≥–æ –±–æ—è',
      stats: '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏',
    },
  ];

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (name.trim()) {
      onLogin(name, selectedClass);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-black flex items-center justify-center p-4">
      <div className="w-full max-w-md">
        <div className="text-center mb-8">
          <h1 className="text-5xl font-bold text-yellow-400 mb-2">
            ‚öîÔ∏è –õ–µ–≥–µ–Ω–¥—ã –°—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—å—è
          </h1>
          <p className="text-gray-300">
            –ë—Ä–∞—É–∑–µ—Ä–Ω–∞—è RPG –≤ –º–∏—Ä–µ —Ä—ã—Ü–∞—Ä–µ–π –∏ –º–∞–≥–∏–∏
          </p>
        </div>

        <Card className="bg-gray-800 border-yellow-600 text-white">
          <CardHeader>
            <CardTitle className="text-center text-yellow-400">
              {isLogin ? '–í—Ö–æ–¥ –≤ –∏–≥—Ä—É' : '–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞'}
            </CardTitle>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <Label htmlFor="name" className="text-white">
                  –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
                </Label>
                <Input
                  id="name"
                  value={name}
                  onChange={(e) => setName(e.target.value)}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≥–µ—Ä–æ—è"
                  className="bg-gray-700 border-gray-600 text-white"
                  required
                />
              </div>

              {!isLogin && (
                <div>
                  <Label className="text-white mb-3 block">
                    –í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å
                  </Label>
                  <div className="space-y-2">
                    {classes.map((cls) => (
                      <div
                        key={cls.id}
                        className={`p-3 rounded-lg border-2 cursor-pointer transition-all ${
                          selectedClass === cls.id
                            ? 'border-yellow-600 bg-yellow-600/20'
                            : 'border-gray-600 bg-gray-700 hover:border-gray-500'
                        }`}
                        onClick={() => setSelectedClass(cls.id)}
                      >
                        <div className="flex items-center gap-3">
                          <span className="text-2xl">{cls.emoji}</span>
                          <div>
                            <div className="font-bold">{cls.name}</div>
                            <div className="text-sm text-gray-300">
                              {cls.description}
                            </div>
                            <div className="text-xs text-yellow-400">
                              {cls.stats}
                            </div>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}

              <Button 
                type="submit"
                className="w-full bg-yellow-600 hover:bg-yellow-700 text-black font-bold"
                disabled={!name.trim()}
              >
                {isLogin ? '–í–æ–π—Ç–∏ –≤ –∏–≥—Ä—É' : '–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞'}
              </Button>
            </form>

            <div className="mt-4 text-center">
              <button
                onClick={() => setIsLogin(!isLogin)}
                className="text-yellow-400 hover:text-yellow-300 text-sm"
              >
                {isLogin ? '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞' : '–£ –º–µ–Ω—è —É–∂–µ –µ—Å—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂'}
              </button>
            </div>

            <div className="mt-6 p-3 bg-blue-900/50 rounded-lg">
              <p className="text-blue-300 text-sm text-center">
                üí° –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞, –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —á–∞—Ç) 
                –ø–æ–¥–∫–ª—é—á–∏—Ç–µ Supabase –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
              </p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default AuthForms;
