import React, { useState } from 'react';
import { Player } from '@/types/game';
import ArenaWithTabs from './ArenaWithTabs';
import ArenaHallView from './ArenaHallView';
import LocationView from './LocationView';
import { Button } from '@/components/ui/button';

interface LocationHandlerProps {
  locationId: string;
  player: Player;
  onPlayerUpdate: (player: Player) => void;
  onBack: () => void;
}

const LocationHandler = ({ locationId, player, onPlayerUpdate, onBack }: LocationHandlerProps) => {
  const [selectedHall, setSelectedHall] = useState<'easy' | 'medium' | 'hard' | null>(null);
  const [selectedArenaBot, setSelectedArenaBot] = useState<string | null>(null);

  const handleEnterHall = (difficulty: 'easy' | 'medium' | 'hard') => {
    setSelectedHall(difficulty);
  };

  const handleStartBattleWithBot = (botId: string) => {
    setSelectedArenaBot(botId);
  };

  const handleNavigate = (location: string) => {
    if (location === 'character') {
      onBack();
    }
  };

  // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∑–∞–ª, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
  if (selectedHall) {
    return (
      <ArenaHallView
        difficulty={selectedHall}
        onBackToArena={() => setSelectedHall(null)}
        onStartBattleWithBot={handleStartBattleWithBot}
      />
    );
  }

  // –ï—Å–ª–∏ —ç—Ç–æ –∞—Ä–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∞—Ä–µ–Ω—É —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
  if (locationId === 'arena') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-black">
        <div className="flex justify-between items-center p-6 mb-6">
          <Button 
            onClick={onBack}
            className="bg-gray-800 bg-opacity-80 text-white hover:bg-gray-700"
          >
            ‚Üê –ù–∞–∑–∞–¥ –≤ –≥–æ—Ä–æ–¥
          </Button>
          <div className="text-yellow-400 font-bold">üí∞ {player.gold} –∑–æ–ª–æ—Ç–∞</div>
        </div>
        
        <ArenaWithTabs
          player={player}
          onPlayerUpdate={onPlayerUpdate}
          onNavigate={handleNavigate}
          onEnterHall={handleEnterHall}
          onStartBattleWithBot={handleStartBattleWithBot}
        />
      </div>
    );
  }

  // –î–ª—è –¥—Ä—É–≥–∏—Ö –ª–æ–∫–∞—Ü–∏–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–∏–¥
  const getLocationInfo = (id: string) => {
    switch (id) {
      case 'merchant':
        return {
          name: '–õ–ê–í–ö–ê',
          image: 'üè™',
          description: '–¢–æ—Ä–≥–æ–≤–∞—è –ª–∞–≤–∫–∞, –≥–¥–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∏ –ø—Ä–æ–¥–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã.'
        };
      case 'blacksmith':
        return {
          name: '–ö–£–ó–ù–ò–¶–ê',
          image: '‚öíÔ∏è',
          description: '–ö—É–∑–Ω–∏—Ü–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∏ —Ä–µ–º–æ–Ω—Ç–∞ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏.'
        };
      case 'healer':
        return {
          name: '–õ–ê–ó–ê–†–ï–¢',
          image: 'üè•',
          description: '–õ–µ—á–µ–±–Ω–∏—Ü–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è –∏ –º–∞–Ω—ã.'
        };
      case 'castle':
        return {
          name: '–ó–ê–ú–û–ö',
          image: 'üè∞',
          description: '–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π –∑–∞–º–æ–∫ —Å –≤–∞–∂–Ω—ã–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏.'
        };
      case 'tavern':
        return {
          name: '–¢–†–ê–ö–¢–ò–†',
          image: 'üç∫',
          description: '–ú–µ—Å—Ç–æ –æ—Ç–¥—ã—Ö–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.'
        };
      case 'temple':
        return {
          name: '–•–†–ê–ú',
          image: '‚õ™',
          description: '–°–≤—è—â–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–π –∏ –º–æ–ª–∏—Ç–≤.'
        };
      default:
        return {
          name: '–ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –õ–û–ö–ê–¶–ò–Ø',
          image: '‚ùì',
          description: '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.'
        };
    }
  };

  const locationInfo = getLocationInfo(locationId);

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-black">
      <div className="flex justify-between items-center p-6 mb-6">
        <Button 
          onClick={onBack}
          className="bg-gray-800 bg-opacity-80 text-white hover:bg-gray-700"
        >
          ‚Üê –ù–∞–∑–∞–¥ –≤ –≥–æ—Ä–æ–¥
        </Button>
        <div className="text-yellow-400 font-bold">üí∞ {player.gold} –∑–æ–ª–æ—Ç–∞</div>
      </div>
      
      <LocationView
        locationName={locationInfo.name}
        locationImage={locationInfo.image}
        locationDescription={locationInfo.description}
        availableActions={[
          {
            name: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–æ—Ä–æ–¥",
            description: "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –ª–æ–∫–∞—Ü–∏–π",
            icon: "üè†",
            action: onBack
          }
        ]}
      />
    </div>
  );
};

export default LocationHandler;
