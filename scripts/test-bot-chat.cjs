const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: './env.local' });

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase
const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase');
  console.log('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env.local —Å–æ–¥–µ—Ä–∂–∏—Ç:');
  console.log('VITE_SUPABASE_URL=...');
  console.log('SUPABASE_SERVICE_KEY=...');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function testBotChat() {
  console.log('ü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–º...\n');

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤
    console.log('1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤...');
    const { data: bots, error: botsError } = await supabase
      .from('bot_characters')
      .select('*')
      .eq('is_active', true)
      .limit(1);

    if (botsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ—Ç–æ–≤:', botsError);
      return;
    }

    if (!bots || bots.length === 0) {
      console.error('‚ùå –ê–∫—Ç–∏–≤–Ω—ã–µ –±–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }

    const bot = bots[0];
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –±–æ—Ç: ${bot.name} (@${bot.username})`);

    // 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞
    console.log('\n2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞...');
    const testMessage = `–ü—Ä–∏–≤–µ—Ç! –Ø ${bot.name}, —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞. –ö–∞–∫ –¥–µ–ª–∞?`;
    
    const { data: messageData, error: messageError } = await supabase
      .from('bot_chat_messages')
      .insert([{
        bot_id: bot.id,
        player_name: bot.username,
        message: testMessage,
        created_at: new Date().toISOString()
      }])
      .select();

    if (messageError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞:', messageError);
      return;
    }

    console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: "${testMessage}"`);
    console.log(`   ID: ${messageData[0].id}`);

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—è–≤–∏–ª–æ—Å—å –≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ all_chat_messages
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ all_chat_messages...');
    const { data: allMessages, error: allMessagesError } = await supabase
      .from('all_chat_messages')
      .select('*')
      .order('created_at', { ascending: false })
      .limit(5);

    if (allMessagesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π:', allMessagesError);
      return;
    }

    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${allMessages.length} –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:`);
    allMessages.forEach((msg, index) => {
      const isBot = msg.is_bot_message;
      console.log(`   ${index + 1}. ${isBot ? 'ü§ñ' : 'üë§'} ${msg.player_name}: "${msg.message}"`);
    });

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–æ—Å—Ç—É–ø–∞
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–æ—Å—Ç—É–ø–∞...');
    const { data: policies, error: policiesError } = await supabase
      .from('pg_policies')
      .select('*')
      .eq('tablename', 'bot_chat_messages');

    if (policiesError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª–∏—Ç–∏–∫–∏ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)');
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${policies.length} –ø–æ–ª–∏—Ç–∏–∫ –¥–ª—è bot_chat_messages`);
    }

    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã –ß—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ –∏–≥—Ä–µ:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8080');
    console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç');
    console.log('3. –î–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞');
    console.log('4. –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  }
}

testBotChat();
